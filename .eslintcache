[{"/ws/practice/react/react-prac/src/index.js":"1","/ws/practice/react/react-prac/src/App.jsx":"2","/ws/practice/react/react-prac/src/components/Accordion.jsx":"3","/ws/practice/react/react-prac/src/components/Search.jsx":"4","/ws/practice/react/react-prac/src/components/Dropdown.jsx":"5"},{"size":145,"mtime":1610648846756,"results":"6","hashOfConfig":"7"},{"size":1078,"mtime":1610908197552,"results":"8","hashOfConfig":"7"},{"size":837,"mtime":1610832536243,"results":"9","hashOfConfig":"7"},{"size":2129,"mtime":1610836409196,"results":"10","hashOfConfig":"7"},{"size":1754,"mtime":1610975557734,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1mgcvfq",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"/ws/practice/react/react-prac/src/index.js",[],["26","27"],"/ws/practice/react/react-prac/src/App.jsx",["28","29","30","31"],"import React, { useState } from 'react';\nimport Dropdown from \"./components/Dropdown\";\nimport Accordion from './components/Accordion';\nimport Search from './components/Search';\n\nconst items = [{\n    title: 'What is React',\n    content: 'React is very good'\n}, {\n    title: 'Why use react?',\n    content: 'React is a favorite JS library'\n}, {\n    title: 'How do you use react?',\n    content: 'You use react bu creating components'\n}];\n\nconst options = [\n    {\n        label: 'The color Red',\n        value: 'red'\n    },\n    {\n        label: 'The color Green',\n        value: 'green'\n    },\n    {\n        label: 'The shade of Gray',\n        value: 'gray'\n    },\n    {\n        label: 'The Blue color',\n        value: 'blue'\n    }\n];\n\nexport default () => {\n    const [selected, setSelected] = useState(options[0]);\n    return (<div>\n        <br />\n        {/*<Search></Search>*/}\n        {/* <Accordion items={items}></Accordion> */}\n        <Dropdown\n            onSelectedChange={setSelected}\n            selected={selected}\n            options={options}\n        />\n    </div>)\n}","/ws/practice/react/react-prac/src/components/Accordion.jsx",[],"/ws/practice/react/react-prac/src/components/Search.jsx",[],["32","33"],"/ws/practice/react/react-prac/src/components/Dropdown.jsx",["34"],"import React, { useState, useEffect, useRef } from 'react';\n\nconst Dropdown =({ options, selected, onSelectedChange }) => {\n    const [open, setOpen] = useState(false);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        const onBodyClick = (event) => {\n            console.log(`----> ${ref.current.contains(event.target)}`)\n            if (ref.current && ref.current.contains(event.target)) {\n                return;\n            }\n            setOpen(!open);\n        }\n\n        document.body.addEventListener('click', onBodyClick);\n\n        return (() => {\n            document.body.removeEventListener('click', onBodyClick);\n        });\n    },  []);\n\n    const renderedOptions = options.map((option) => {\n        if (option === selected) {\n            return null;\n        }\n        return (\n            <div\n                key={option.value}\n                className=\"item\"\n                style={{color: 'darkslategray'}}\n                onClick={() => onSelectedChange(option)}\n            >\n                {option.label}\n            </div>\n        );\n    })\n    return (\n        <div ref={ref} className=\"ui form\">\n            <div className=\"field\">\n                <label className=\"label\">Select a Color</label>\n                <div\n                    onClick={() => {setOpen(!open)}}\n                    className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n                >\n                    <i className=\"dropdown icon\" />\n                    <div className=\"text\" style={{fontWeight: 'bold'}}>{selected.label}</div>\n                    <div className={`menu ${open ? 'visible transition' : ''}`}>{renderedOptions}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dropdown;",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":17},{"ruleId":"39","severity":1,"message":"43","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":14},{"ruleId":"39","severity":1,"message":"44","line":6,"column":7,"nodeType":"41","messageId":"42","endLine":6,"endColumn":12},{"ruleId":"45","severity":1,"message":"46","line":36,"column":1,"nodeType":"47","endLine":48,"endColumn":2},{"ruleId":"35","replacedBy":"48"},{"ruleId":"37","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":21,"column":9,"nodeType":"52","endLine":21,"endColumn":11,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Accordion' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'items' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["54"],["55"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'open'. Either include it or remove the dependency array. You can also do a functional update 'setOpen(o => ...)' if you only need 'open' in the 'setOpen' call.","ArrayExpression",["56"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [open]",{"range":"59","text":"60"},[656,658],"[open]"]